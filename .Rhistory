library(devtools4)
install.packages("devtools4")
install_github("ropengov/rqog")
install_github("ropengov/rqog")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
install_github("ropengov/rqog")
Sys.which("make")
install.packages("jsonlite", type = "source")
install_github("ropengov/rqog")
read_qog(
which_data = "basic",
data_type = "time-series",
year = 2020,
data_dir = NULL,
file_format = "csv",
download_only = FALSE,
cache = TRUE,
update_cache = FALSE
)
library(rqog)
load(unzip(url("https://dvn-cloud.s3.amazonaws.com/10.7910/DVN/LM4OWF/17218a5095a-d5c9b41a21d6?response-content-disposition=attachment%3B%20filename%2A%3DUTF-8%27%27swiid8_3.zip&response-content-type=application%2Fzip&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20200701T054421Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3600&X-Amz-Credential=AKIAIEJ3NV7UYCSRJC7A%2F20200701%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=29911e165f9fc07c8f5d197d7b607c5ed62a1b62d1fd152204807723652c4457")))
setwd("C:/Users/Anais/Dropbox/Asistencia al fondecyt/loc_merit_pref_int_ed/meritocracy-preferences-master")
source('C:/Users/Anais/Dropbox/Asistencia al fondecyt/loc_merit_pref_int_ed/meritocracy-preferences-master/render-site.R', echo=TRUE)
results_1_accum_gini = lmer(accum ~ univ + as.factor(quintile_miss) +	sstatus + sex + age + gini_neto + 1 +  (1| v5c),  data = mer_pref, REML=F)
results_1_accum_mediation = lmer(accum ~ univ + as.factor(quintile_miss) +	sstatus + sex + age + gini_neto + merit + bmerit + unmerit + need +  1 +  (1| v5c),  data = mer_pref, REML=F)
screengreg(list(results_1_accum_gini, results_1_accum_mediation))
screenreg(list(results_1_accum_gini, results_1_accum_mediation))
save(results_2_accum_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_1_redist_macro, file = "output/results/results_1_accum_macro.rdata")
save(results_2_redist_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_3_redist_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
#accum
save(results_1_accum_macro, file = "output/results/results_1_accum_macro.rdata")
save(results_2_accum_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_3_accum_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
# Modelo nulo
results_0_redist  = lmer(redist ~ 1 + (1| v5c), data = mer_pref, REML=F)
# Correlacion intraclase redist
reghelper::ICC(results_0_redist)
# Modelo nulo
results_0_accum = lmer(accum ~ 1 + (1| v5c), data = mer_pref, REML=F)
# Correlacion intraclases accum
reghelper::ICC(results_0_accum)
results_1_redist_dem  = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age + 1 + (1| v5c), data = mer_pref, REML=F)
results_1_redist_indsust = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + 1 +  (1| v5c), data = mer_pref, REML=F)
results_1_redist_macro = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + gini_neto + fi_index + 1 +  (1| v5c), data = mer_pref, REML=F)
htmlreg(list(results_1_redist_dem, results_1_redist_indsust,results_1_redist_macro))
sjPlot::plot_model(results_1_redist_macro, type="std")
png("output/results/results_1_redist_macro.png")
sjPlot::plot_model(results_1_redist_macro, type="std")
dev.off()
anova(results_1_redist_dem,results_1_redist_macro)
anova(results_1_redist_indsust,results_1_redist_macro)
results_1_accum_dem  = lmer(accum ~ univ + as.factor(quintile_miss) +	sstatus + sex + age + 1 + (1| v5c), data = mer_pref, REML=F)
results_1_accum_indsust = lmer(accum ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + 1 +  (1| v5c), data = mer_pref, REML=F)
results_1_accum_macro = lmer(accum ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + gini_neto + fi_index + 1 +  (1| v5c), data = mer_pref, REML=F)
htmlreg(list(results_1_accum_dem, results_1_accum_indsust,results_1_accum_macro))
sjPlot::plot_model(results_1_accum_macro, type="std")
png("output/results/results_1_accum_macro")
sjPlot::plot_model(results_1_accum_macro, type="std")
dev.off()
anova(results_1_accum_dem,results_1_accum_indsust)
anova(results_1_accum_indsust,results_1_accum_macro)
# Redis
results_2_redist_macro_bv = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + gini_neto + fi_index + 1 +  (1 + merit| v5c), data= mer_pref, REML=F)
htmlreg(list(results_1_redist_macro, results_2_redist_macro_bv))
graf2=ggpredict(results_2_redist_macro_bv, terms = c("merit","v5c [sample = 9]"), type="re")
plot(graf2)
png("output/results/mer_pref_mu.png")
plot(graf2)
dev.off()
anova(results_1_redist_macro,results_2_redist_macro_bv)
# accum
results_2_accum_macro_bv = lmer(accum ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need +  gini_neto + fi_index + 1 +  (1 + merit| v5c), data = mer_pref, REML=F)
htmlreg(list(results_1_accum_macro, results_2_accum_macro_bv))
graf2=ggpredict(results_2_accum_macro_bv, terms = c("merit","v5c [sample = 9]"), type="re")
plot(graf2)
png("output/results/mer_accum_mu.png")
plot(graf2)
dev.off()
anova(results_1_accum_macro,results_2_accum_macro_bv)
# guardar tablas
#redis
save(results_1_redist_macro, file = "output/results/results_1_accum_macro.rdata")
save(results_2_redist_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_3_redist_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
#accum
save(results_1_accum_macro, file = "output/results/results_1_accum_macro.rdata")
save(results_2_accum_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_3_accum_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
# Individual level vars
mlaccum_1 = lmer(accum ~ 1 + univ + as.factor(quintile_miss) +
sstatus + sex + age + univ*sex + age*age + (1 | v5.x), data =mer_pref)
htmlreg(mlaccum_1)
plot_model(mlaccum_1, type = c("est")) ###
# Macro level vars
mlaccum_2 = lmer(accum ~ 1 + univ_g + as.factor(quintile_miss) +
(sstatus -f_sstatus) + gini_neto + (1 | v5.x), data=mer_pref)
htmlreg(mlaccum_2)
# Random slope & cross-level
mlaccum_3 = lmer(accum ~ 1 + univ_g + f_sstatus + gini_neto +
gini_neto*f_sstatus +	(1 + f_sstatus | v5.x), data=mer_pref)
htmlreg(mlaccum_3)
results_3_redist_macro_bvi
save(results_3_redist_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
#Redis
results_3_redist_macro_bvi = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + merit*gini_neto + fi_index + 1 +  (1 + merit| v5c), data = mer_pref, REML=F)
htmlreg(list(results_1_redist_macro, results_2_redist_macro_bv, results_3_redist_macro_bvi))
sjPlot::plot_model(results_3_redist_macro_bvi, type = c("int"))
png("output/results/mer_redist_int_gini.png")
sjPlot::plot_model(results_3_redist_macro_bvi, type = c("int"))
dev.off()
results_3_redist_macro_bvi = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + merit*gini_neto + fi_index + 1 +  (1 + merit| v5c), data = mer_pref, REML=F)
htmlreg(list(results_1_redist_macro, results_2_redist_macro_bv, results_3_redist_macro_bvi))
png("output/results/mer_redist_int_gini.png")
sjPlot::plot_model(results_3_redist_macro_bvi, type = c("int"))
save(results_1_redist_macro, file = "output/results/results_1_accum_macro.rdata")
save(results_2_redist_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_3_redist_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_1_accum_macro, file = "output/results/results_1_accum_macro.rdata")
save(results_2_accum_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_3_accum_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
results_3_accum_macro_bvi = lmer(accum ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need +  gini_neto + merit*fi_index + 1 +  (1 + merit| v5c), data = mer_pref, REML=F)
htmlreg(list(results_2_accum_macro_bv, results_3_accum_macro_bvi))
sjPlot::plot_model(results_3_accum_macro_bvi, type = c("int"))
save(results_3_accum_macro_bvi, file = "output/results/results_2_accum_macro_bv.rdata")
load(file = "output/results/results_1_accum_macro.rdata")
load(file = "output/results/results_2_accum_macro_bv.rdata")
load(file = "output/results/results_2_accum_macro_bv.rdata")
htmlreg(list(results_1_redist_macro, results_2_redist_macro_bv, results_3_redist_macro_bvi))
png("output/results/mer_redist_int_gini.png")
sjPlot::plot_model(results_3_redist_macro_bvi, type = c("int"))
dev.off()
source('C:/Users/Anais/Dropbox/Asistencia al fondecyt/loc_merit_pref_int_ed/meritocracy-preferences-master/render-site.R', echo=TRUE)
#accum
load("output/results/results_1_accum_macro.rdata")
#pref
load(file = "output/results/results_1_accum_macro.rdata")
#pref
load(file = "output/results/results_1_redist_macro.rdata")
load(file = "output/results/results_2_redist_macro_bv.rdata")
load(file = "output/results/results_3_redist_macro_bvi.rdata")
save(results_1_redist_macro, file = "output/results/results_1_redist_macro.rdata")
save(results_2_redist_macro_bv, file = "output/results/results_2_redist_macro_bv.rdata")
save(results_3_redist_macro_bvi, file = "output/results/results_3_redist_macro_bvi.rdata")
results_1_redist_dem  = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age + 1 + (1| v5c), data = mer_pref, REML=F)
results_1_redist_indsust = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + 1 +  (1| v5c), data = mer_pref, REML=F)
results_1_redist_macro = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + gini_neto + fi_index + 1 +  (1| v5c), data = mer_pref, REML=F)
htmlreg(list(results_1_redist_dem, results_1_redist_indsust,results_1_redist_macro))
sjPlot::plot_model(results_1_redist_macro, type="std")
png("output/results/results_1_redist_macro.png")
sjPlot::plot_model(results_1_redist_macro, type="std")
dev.off()
anova(results_1_redist_dem,results_1_redist_macro)
anova(results_1_redist_indsust,results_1_redist_macro)
load("output/results/results_2_accum_macro_bv.rdata")
# guardar tablas
#redis
save(results_1_redist_macro, file = "output/results/results_1_redist_macro.rdata")
save(results_2_redist_macro_bv, file = "output/results/results_2_redist_macro_bv.rdata")
save(results_3_redist_macro_bvi, file = "output/results/results_3_redist_macro_bvi.rdata")
#accum
save(results_1_accum_macro, file = "output/results/results_1_accum_macro.rdata")
save(results_2_accum_macro_bv, file = "output/results/results_2_accum_macro_bv.rdata")
save(results_3_accum_macro_bvi, file = "output/results/results_3_accum_macro_bvi.rdata")
results_1_redist_dem  = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age + 1 + (1| v5c), data = mer_pref, REML=F)
results_1_redist_indsust = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + 1 +  (1| v5c), data = mer_pref, REML=F)
results_1_redist_macro = lmer(redist ~ univ + as.factor(quintile_miss) +	sstatus + sex + age  + merit + bmerit + unmerit + need + gini_neto + fi_index + 1 +  (1| v5c), data = mer_pref, REML=F)
htmlreg(list(results_1_redist_dem, results_1_redist_indsust,results_1_redist_macro))
sjPlot::plot_model(results_1_redist_macro, type="std")
png("output/results/results_1_redist_macro.png")
sjPlot::plot_model(results_1_redist_macro, type="std")
dev.off()
anova(results_1_redist_dem,results_1_redist_macro)
anova(results_1_redist_indsust,results_1_redist_macro)
load("output/results/results_3_accum_macro_bvi.rdata")
library(sjPlot)
source('C:/Users/Anais/Dropbox/Asistencia al fondecyt/loc_merit_pref_int_ed/meritocracy-preferences-master/render-site.R', echo=TRUE)
source('C:/Users/Anais/Dropbox/Asistencia al fondecyt/loc_merit_pref_int_ed/meritocracy-preferences-master/render-site.R', echo=TRUE)
setwd("C:/Users/Anais/Dropbox/Asistencia al fondecyt/loc_merit_pref_int_ed/meritocracy-preferences-master")
source('C:/Users/Anais/Dropbox/Asistencia al fondecyt/loc_merit_pref_int_ed/meritocracy-preferences-master/render-site.R', echo=TRUE)
devtools::install_github("ropengov/rqog")
